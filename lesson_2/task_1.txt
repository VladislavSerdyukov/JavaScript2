Сущность корзины заключается в том, чтобы получать данные (title, price, img) тех товаров, кнопки "Купить" которых
нажал пользователь в каталоге товаров на странице. 
Вывести разметку корзины, где будут указаны все товары добавленные пользователем в корзину, их img, title, price, а так же 
с помощью input запрашивать кол-во единиц одного товара у пользователя (quantity) (по умолчанию будет стоять 1 единица 
и на ввод должна стоять проверка на число). 
Далее будет указана общая стоимость одного вида товара (productSum) (т.е. price умножаем на значение введенное в input 
пользователем и выдаем результат. По умолчанию будет указано число равное price т.к. по умолчанию в input будет 1). 
Так же должна быть кнопка (delete) которая будет убирать товар из корзины, если пользователь нажмет на нее. 
Внизу под товарами будем выводиться общее кол-во единиц товаров в корзине (totalQuantity) и их общую стоимость (totalSum). 
Так же должна быть кнопка "Оплатить", нажав на которую пользователь будет направлен на форму оплаты. 

Корзина будет состоять из двух классов: Basket и BasketItem

Basket 
В данном классе будут храниться методы:
1) метод, который будет собирать товары помещенные в  корзину. Т.е. при клике по кнопке "BUY" у конкректного товара в каталоге товаров, 
мы будем обрабатывать клик. По нему данный метод будет добавлять экземпляр класса "Элемента  Корзины Товара" в объект 
"Товары корзины", который будет в свою очередь как раз хранить все товары по которым кликали (т.е. их  img, title, id, price)
2) конструктор, который будет создавать новый экземпляр класса Basket 
3) метод, который будет получать введенные данные пользователем в поле input указания кол-ва товара (quantity) и проверять их на 
соотвествие числу. А далее производить умножение полученного числа на price этого товара и возвращать общую стоимость для этого 
товара (productSum) исходя из кол-ва.
4) render - метод который будет генерировать разметку корзины на странице. Будет каждый товар добавленный в "Товары корзины" 
(т.е. его  img, title, price, quantity, productSum, а так же totalQuantity - кол-во всего позиций в корзине и totalSum - итоговая  сумма всех товаров в корзине)
5) метод, удаления товара из корзины

    
BasketItem. 
В данном классе будут храниться методы:
1) конструктор, который будет создавать новый экземпляр класса BasketItem.
2) render - по аналогии с ProductItem, который будет возвращать кусок разметки для одного товара в корзине